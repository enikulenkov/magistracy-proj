#-*-Makefile-*-

# Location of the CUDA Toolkit
CUDA_PATH ?= "/opt/cuda"
CUDALIB_PATH = /usr/lib/nvidia-304
CUDARTLIB_PATH = /usr/lib/x86_64-linux-gnu

# internal flags
NVCC        = nvcc
CC          = gcc
FORTRAN_CC  = gfortran
CXX         = g++
#NVCCFLAGS   := -m32 -arch=sm_20 --compiler-options=-fno-exceptions
NVCCFLAGS   = -arch=sm_20 --compiler-options=-fno-exceptions -G -g
CCFLAGS     = -g
DEFINES     = -DDEBUG
NVCCLDFLAGS =
LDFLAGS     += -L$(BUILD_HOME)/lib $(UTILS_LIB) -lm
ifeq ($(USE_GPUOCELOT),1)
LDFLAGS_GPU += -L/opt/cuda/lib -locelot
else
LDFLAGS_GPU += -L$(CUDALIB_PATH) -L$(CUDARTLIB_PATH) -lcudart -lcuda
endif
INCPATH     += -I$(BUILD_HOME)/include

################################################################################

# Implicit rules
%.o : %.c
	$(CC) -c $(DEFINES) $(INCPATH) $(CCFLAGS) -o $@ $<

%.o : %.cpp
	$(CXX) -c $(DEFINES) $(INCPATH) $(CCFLAGS) -o $@ $<

%.w.o : %.c
	$(CC) -c $(DEFINES) $(INCPATH) $(CCFLAGS) -o $@ $<

%.o: %.cu
	$(NVCC) $(NVCCFLAGS) $(INCLUDES) $(ALL_CCFLAGS) $(GENCODE_FLAGS) -o $@ -c $<

%.o: %.f90
	$(FORTRAN_CC) $(FORTRAN_CCFLAGS) $(LDFLAGS) -o $@ $+

################################################################################
# Lib names
UTILS_LIB = $(BUILD_HOME)/lib/libutils.a
ALG_LIB = $(BUILD_HOME)/lib/libalgs.a

################################################################################
# Build primitives

MAKE        = make -e
MAKE_LIB    = ar r $@ $^
LINK_BINARY = $(CC) -o $@ $+ $(LDFLAGS)
LINK_BINARY_CXX = $(CXX) -o $@ $+ $(LDFLAGS) $(LDFLAGS_USER)
LINK_BINARY_GPU = $(CC) -o $@ $+ $(LDFLAGS_GPU)

################################################################################
# Common targets
bldall: all

clean:
	rm -f *.o $(BINS) *.ene *.res *.xyz *.ang

clobber: clean
	rm -f tags TAGS

# vim: set filetype=make : 
